type Query {
  # Query - Users
  users(query: String): [User!]!
  me: User!

  # Query - Posts
  posts(query: String): [Post!]!
  post: Post!

  # Query - Comments
  comments: [Comment!]!
}

type Mutation {
  # Mutation - User
  createUser(data: CreateUserInput!): User!
  updateUser(id: ID!, data: UpdateUserInput!): User!
  deleteUser(id: ID!): User!

  # Mutation - Post
  createPost(data: CreatePostInput!): Post!
  updatePost(id: ID!, data: UpdatePostInput!): Post!
  deletePost(id: ID!): Post!

  # Mutation - Comment
  createComment(data: CreateCommentInput!): Comment!
  updateComment(id: ID!, data: UpdateCommentInput!): Comment!
  deleteComment(id: ID!): Comment!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type Subscription {
  comment(postId: ID!): CommentSubscriptionPayload!
  post: PostSubscriptionPayload!
}